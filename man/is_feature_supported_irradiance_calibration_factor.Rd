% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature-irradiance-calibration-factor.R
\name{is_feature_supported_irradiance_calibration_factor}
\alias{is_feature_supported_irradiance_calibration_factor}
\alias{get_feature_irradiance_calibration_factor}
\alias{get_irradiance_calibration_factors}
\title{Feature "Irradiance Calibration Factor"}
\usage{
is_feature_supported_irradiance_calibration_factor(jwrapper, sr.index = 0L)

get_feature_irradiance_calibration_factor(jwrapper, sr.index = 0L)

get_irradiance_calibration_factors(irrad.cal.wrapper)
}
\arguments{
\item{jwrapper}{an open Wrapper object from Omnidriver}

\item{sr.index}{an index to address the spectrometer}

\item{irrad.cal.wrapper}{An open wrapper for the feature object.}
}
\value{
a logical value

A wrapper on a Java object which provides the interface, or null if
  this feature is not available for this spectrometer.

A numeric vector of calibration factors, as returned by the
  spectrometer.
}
\description{
Check whether feature "Irradiance Calibration Factor" is available in the
spectrometer addressed. Construct a wrapper on the Java controller for the
feature. Use a wrapped controller to retrieve the calibration factors.
}
\note{
Before calling \code{get_feature_irradiance_calibration_factor} you
  first need to check that the feature is supported by the spectrometer in
  use by calling \code{is_feature_supported_irradiance_calibration_factor}.

An attempt to retrieve calibration factors may fail and not return
  unless a USB timeout is set with function \code{set_USB_timeout()}.
}
